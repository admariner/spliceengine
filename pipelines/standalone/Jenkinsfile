@Library('jenkins-shared-library')_

properties([    
    // Job parameter defintions.
    parameters([
        stringParam(
            description: 'Sprint number to build',
            name: 'BUILD_NUM',
            defaultValue: ''
        )
    ])
])

// Define params
def BUILD_NUM = "${params.BUILD_NUM}"

node('spliceengine') {
  // run tests
  try {
    def artifact_values  = [
        [$class: 'VaultSecret', path: "secret/aws/jenkins/colo_jenkins", secretValues: [
            [$class: 'VaultSecretValue', envVar: 'ARTIFACT_USER', vaultKey: 'user'],
            [$class: 'VaultSecretValue', envVar: 'ARTIFACT_PASSWORD', vaultKey: 'pass']]]
    ]
    // Mark the code checkout 'stage'....
    stage('Checkout') {
      checkout([  
            $class: 'GitSCM', 
            branches: [[name: 'refs/heads/DB-10218']], 
            doGenerateSubmoduleConfigurations: false, 
            extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'infrastructure-support']], 
            submoduleCfg: [], 
            userRemoteConfigs: [[credentialsId: '88647ede-744a-444b-8c08-8313cc137944', url: 'https://github.com/splicemachine/infrastructure-support.git']]
      ])
      checkout([  
            $class: 'GitSCM', 
            branches: [[name: 'refs/heads/master']], 
            doGenerateSubmoduleConfigurations: false, 
            extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'infrastructure-support/build-support/scripts/standalone/spliceengine']], 
            submoduleCfg: [], 
            userRemoteConfigs: [[credentialsId: '88647ede-744a-444b-8c08-8313cc137944', url: 'https://github.com/splicemachine/spliceengine.git']]
      ])
      checkout([  
            $class: 'GitSCM', 
            branches: [[name: 'refs/heads/master']], 
            doGenerateSubmoduleConfigurations: false, 
            extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'infrastructure-support/build-support/scripts/standalone/spliceengine-ee']], 
            submoduleCfg: [], 
            userRemoteConfigs: [[credentialsId: '88647ede-744a-444b-8c08-8313cc137944', url: 'https://github.com/splicemachine/spliceengine-ee.git']]
      ])
    }


    stage('Inject Env Variables') {
        wrap([$class: 'VaultBuildWrapper', vaultSecrets: artifact_values]) {
            dir('infrastructure-support/build-support/scripts/standalone/spliceengine'){
                sh """
                    mkdir -p  ~/.m2/
                    cp pipelines/spot-bugs/template/settings.xml ~/.m2/settings.xml
                    sed  -i "s/REPLACE_USER/${ARTIFACT_USER}/" ~/.m2/settings.xml
                    sed  -i "s/REPLACE_PASS/${ARTIFACT_PASSWORD}/" ~/.m2/settings.xml
                    mvn -B -e --fail-at-end  clean install -Pcore,cdh6.3.0 -DskipTests -Dmaven.artifact.threads=30 -Dhbase.version=2.1.0-cdh6.3.0 -DenvClassifier=cdh6.3.0
                    
                """
            }
        }
      dir('infrastructure-support/build-support/scripts/standalone/'){
        sh "sed -i 's/buildNum=/buildNum=${BUILD_NUM}/' standalone.sh"
      }
    }

    stage('Run Build') {
    dir('infrastructure-support/build-support/scripts/standalone/'){
      sh'''
      ./standalone.sh
      tar xvf *.tar.gz
      export PYTHONPATH=$WORKSPACE:$PYTHONPATH
      python3 unit_test.py
      '''

     }
   }
  } catch (any) {
    // if there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw any
  } finally {
    archiveArtifacts artifacts: 'infrastructure-support/build-support/scripts/standalone/*.tar.gz'
    // success or failure, always send notifications
    currentBuild.result = "SUCCESS"
  }
}
